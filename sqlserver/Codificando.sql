/*CONECTANDO A UM BANCO*/
USE EMPRESA
GO

/*CRIAÇÃO DE TABELAS
IDENTITY(INICIO,INCREMENTO) VALOR PADRAO IDENTITY(1,1)
*/

CREATE TABLE ALUNO(
    IDALUNO INT PRIMARY KEY IDENTITY,
    NOME VARCHAR(30) NOT NULL,
    SEXO CHAR(1) NOT NULL,
    NASCIMENTO DATE NOT NULL,
    EMAIL VARCHAR(30) UNIQUE,
)
GO

/* CONSTRAINTS*/
ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK (SEXO IN('M','F'))
GO

/* 1 x 1*/
CREATE TABLE ENDERECO (
    IDENDERECO INT PRIMARY KEY IDENTITY(100,10),
    BAIRRO VARCHAR(30) NOT NULL,
    UF CHAR(2) NOT NULL
    CHECK (UF IN('RJ','SP','PR')),
    ID_ALUNO INT UNIQUE
)
GO

/*CRIANDO A FK*/
ALTER TABLE ENDERECO
ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(IDALUNO)
GO

/* COMANDOS DE DESCRICAO*/

SP_COLUMNS ALUNO
GO
SP_HELP ALUNO
GO
/* INSERINDO DADOS*/
INSERT INTO ALUNO VALUES ('ANDRE','M','1998/05/03','andre@hotmail.com');
INSERT INTO ALUNO VALUES ('ANA','F','2001/12/03','ana@hotmail.com');
INSERT INTO ALUNO VALUES ('RUI','M','1995/06/03','rui@hotmail.com');
INSERT INTO ALUNO VALUES ('JOAO','M','1999/07/03','joao@hotmail.com');
GO
SELECT * FROM ALUNO;
GO

/* ENDERECO */
INSERT INTO ENDERECO VALUES('FLAMENGO','RJ',1);
INSERT INTO ENDERECO VALUES('MORUMBI','SP',2);
INSERT INTO ENDERECO VALUES('CENTRO','PR',3);
INSERT INTO ENDERECO VALUES('CENTRO','SP',4);
GO

/* CRIANDO A TABELA TELEFONES */
CREATE TABLE TELEFONE (
    IDTELEFONE INT PRIMARY KEY IDENTITY,
    TIPO CHAR(3) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    ID_ALUNO INT,
    CHECK (TIPO IN('RES','CEL','TEL'))

);
GO
INSERT INTO TELEFONE VALUES('CEL','78984565',1)
INSERT INTO TELEFONE VALUES('RES','36984515',1)
INSERT INTO TELEFONE VALUES('CEL','98564875',2)
INSERT INTO TELEFONE VALUES('RES','36521425',2)
INSERT INTO TELEFONE VALUES('CEL','96856585',3)
INSERT INTO TELEFONE VALUES('TEL','36353536',1)
GO
SELECT * FROM TELEFONE;
GO

ALTER TABLE TELEFONE 
ADD CONSTRAINT FK_TELEFONE_ALUNO
FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(IDALUNO)
GO

/* PEGAR DATA ATUAL */
SELECT GETDATE()
GO

/* CLAUSULA AMBIGUA  E PONTEIRAMENTO*/

SELECT  A.NOME, 
        ISNULL(T.TIPO,'SEM') AS "TIPO",
        ISNULL(T.NUMERO,'NUMERO') AS "NUMERO",
        E.BAIRRO,
        E.UF
FROM ALUNO A
    LEFT JOIN TELEFONE T
    ON A.IDALUNO = T.ID_ALUNO
    INNER JOIN ENDERECO E
    ON A.IDALUNO = E.ID_ALUNO

SELECT * FROM ALUNO
GO

/* DATAS */

SELECT NOME,NASCIMENTO
FROM ALUNO

/*DATEDIFF - CALCULAR A DIFERENÇA ENTRE 2 DATAS 
    GETDATE() RETORNA DIA E HORA
*/

SELECT  NOME, GETDATE() AS DIA_HORA
FROM ALUNO
GO
/*1 PASSO */
SELECT NOME, DATEDIFF(DAY,NASCIMENTO,GETDATE())
FROM ALUNO
GO

/*2 PASSO */
SELECT NOME, DATEDIFF(DAY,NASCIMENTO,GETDATE()) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, DATEDIFF(DAY,NASCIMENTO,GETDATE()) AS IDADE
FROM ALUNO
GO

/*3 PASSO - RETORNO EM INTEIRO + OPER MATEMATICO*/

SELECT NOME, (DATEDIFF(DAY,NASCIMENTO,GETDATE())/365) AS IDADE
FROM ALUNO
GO

SELECT NOME, (DATEDIFF(MONTH,NASCIMENTO,GETDATE())/12) AS IDADE
FROM ALUNO
GO

SELECT NOME, DATEDIFF(YEAR,NASCIMENTO,GETDATE()) AS IDADE
FROM ALUNO
GO

/* DATENAME - TRAZ O **NOME** DA PARTE DA DATA EM QUESTÃO*/

SELECT NOME, DATENAME(MONTH,NASCIMENTO) AS MONTH
FROM ALUNO;
GO

SELECT NOME, DATENAME(YEAR,NASCIMENTO)
FROM ALUNO;
GO

SELECT NOME, DATENAME(WEEKDAY,NASCIMENTO)
FROM ALUNO;
GO

/* DATEPART - TRAZ O VALOR INTEIRO DA PARTE DA DATA EM QUESTÃO*/

SELECT NOME, DATEPART(MONTH,NASCIMENTO) AS MES
FROM ALUNO
GO
/* COMBINANDO FUNÇÕES */
SELECT  NOME, 
        DATEPART(MONTH,NASCIMENTO) AS MES,
        DATENAME(MONTH,NASCIMENTO) AS MESSTRING
FROM ALUNO
GO

/*DATEADD - RETORNA UMA DATA SOMANDO OUTRA DATA*/

/* DAQUI UM ANO*/
SELECT DATEADD(DAY,365,GETDATE());
/* DAQUI A 10 ANOS*/
SELECT DATEADD(YEAR,10,GETDATE());

